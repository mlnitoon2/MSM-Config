name: Auto Bump Version
on:
  push:
    branches: [main]
permissions:
  contents: write
jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install jq
      run: sudo apt-get install -y jq
    - name: Get commit message
      id: commit
      run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
    - name: Determine version bump type
      id: bump_type
      run: |
        COMMIT_MSG="${{ steps.commit.outputs.message }}"
        if [[ "$COMMIT_MSG" == *"[MAJOR]"* ]]; then
          echo "type=major" >> $GITHUB_OUTPUT
        elif [[ "$COMMIT_MSG" == *"[MINOR]"* ]]; then
          echo "type=minor" >> $GITHUB_OUTPUT
        else
          # Count lines changed in this commit
          LINES_CHANGED=$(git diff HEAD~1 --numstat | awk '{s+=$1+$2} END {print s}')
          if [[ $LINES_CHANGED -gt 100 ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          else
            echo "type=minor" >> $GITHUB_OUTPUT
          fi
        fi
    - name: Bump version
      run: |
        FILE="anim_maker_config.json"
        VERSION=$(jq -r '.version' "$FILE")
        IFS='.' read -r SOFTWARE MAJOR MINOR <<< "$VERSION"
        
        BUMP_TYPE="${{ steps.bump_type.outputs.type }}"
        
        if [[ "$BUMP_TYPE" == "major" ]]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
        elif [[ "$BUMP_TYPE" == "minor" ]]; then
          MINOR=$((MINOR + 1))
        fi
        
        if [[ "$MINOR" -ge 10 ]]; then
          MINOR=0
          MAJOR=$((MAJOR + 1))
        fi
        
        if [[ "$MAJOR" -ge 10 ]]; then
          MAJOR=0
          SOFTWARE=$((SOFTWARE + 1))
        fi
        
        NEW_VERSION="$SOFTWARE.$MAJOR.$MINOR"
        jq --arg v "$NEW_VERSION" '.version = $v' "$FILE" > tmp.json && mv tmp.json "$FILE"
        echo "Bumped to version $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
    - name: Commit and push
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/mlnitoon2/MSM-Config.git
        git add anim_maker_config.json
        git commit -m "Bump version to ${{ env.NEW_VERSION }}" || echo "No changes to commit"
        git push origin HEAD:main
